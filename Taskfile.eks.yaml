version: '3'

vars:
  ENV: develop
  TF_VAR_environment: '{{.ENV}}'
  STATE_BUCKET: use2-bpf-tfstave
  STATE_KEY: '{{.ENV}}/terraform.tfstate'
  STATE_REGION: us-east-2
  TOFU_CLI: tofu
  TF_VAR_prefix: 'use2-{{.ENV}}-'

tasks:
  default:
    cmds:
      - task -l
    silent: true

  init:
    desc: Initialize OpenTofu with the correct backend config
    dir: infra/terraform
    cmds:
      - >
        {{.TOFU_CLI}} init -migrate-state -force-copy
        -backend-config="bucket={{.STATE_BUCKET}}"
        -backend-config="key={{.STATE_KEY}}"
        -backend-config="region={{.STATE_REGION}}"
        -backend-config="encrypt=true"

  plan:
    desc: Run OpenTofu plan
    dir: infra/terraform
    deps: [init]
    cmds:
      - '{{.TOFU_CLI}} plan -var-file="environments/{{.ENV}}.tfvars"'

  apply:
    desc: Run OpenTofu apply
    dir: infra/terraform
    deps: [init]
    cmds:
      - '{{.TOFU_CLI}} apply -var-file="environments/{{.ENV}}.tfvars" {{.CLI_ARGS}}'

  destroy:
    desc: Run OpenTofu destroy
    dir: infra/terraform
    deps: [init]
    interactive: true
    cmds:
      - |
        echo "Are you sure you want to destroy the {{.ENV}} environment? Type 'yes' to continue"
        read -r CONFIRM
        if [ "$CONFIRM" = "yes" ]; then
          {{.TOFU_CLI}} destroy -var-file="environments/{{.ENV}}.tfvars" {{.CLI_ARGS}}
        else
          echo "Operation cancelled"
          exit 1
        fi

  output:
    desc: Show OpenTofu outputs
    dir: infra/terraform
    deps: [init]
    cmds:
      - '{{.TOFU_CLI}} output {{.CLI_ARGS}}'

  fmt:
    desc: Format OpenTofu files
    dir: infra/terraform
    cmds:
      - '{{.TOFU_CLI}} fmt -recursive'

  validate:
    desc: Validate OpenTofu configuration
    dir: infra/terraform
    deps: [init]
    cmds:
      - '{{.TOFU_CLI}} validate'

  workspace:new:
    desc: Create a new workspace
    dir: infra/terraform
    cmds:
      - '{{.TOFU_CLI}} workspace new {{.CLI_ARGS}}'

  workspace:list:
    desc: List workspaces
    dir: infra/terraform
    cmds:
      - '{{.TOFU_CLI}} workspace list'

  workspace:select:
    desc: Select workspace
    dir: infra/terraform
    cmds:
      - '{{.TOFU_CLI}} workspace select {{.CLI_ARGS}}'

  state:pull:
    desc: Pull remote state locally
    dir: infra/terraform
    deps: [init]
    cmds:
      - '{{.TOFU_CLI}} state pull > terraform.tfstate'

  state:push:
    desc: Push local state to remote
    dir: infra/terraform
    deps: [init]
    interactive: true
    cmds:
      - |
        echo "Warning: This will overwrite remote state. Type 'yes' to continue"
        read -r CONFIRM
        if [ "$CONFIRM" = "yes" ]; then
          {{.TOFU_CLI}} state push terraform.tfstate
        else
          echo "Operation cancelled"
          exit 1
        fi

  deploy-bootstrap:
    desc: Bootstrap AWS infrastructure with remote state
    dir: infra/terraform
    deps: [init]
    cmds:
      - echo "Creating S3 bucket for remote state if it doesn't exist..."
      - aws s3api head-bucket --bucket {{.STATE_BUCKET}} || aws s3api create-bucket --bucket {{.STATE_BUCKET}} --region {{.STATE_REGION}} --create-bucket-configuration LocationConstraint={{.STATE_REGION}}
      - echo "Enabling versioning for S3 bucket..."
      - aws s3api put-bucket-versioning --bucket {{.STATE_BUCKET}} --versioning-configuration Status=Enabled
      - echo "Enabling encryption for S3 bucket..."
      - aws s3api put-bucket-encryption --bucket {{.STATE_BUCKET}} --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'
      - echo "Applying bootstrap configuration..."
      - '{{.TOFU_CLI}} apply -auto-approve -var-file="environments/{{.ENV}}.tfvars" {{.CLI_ARGS}}'

  deploy-argocd:
    desc: Deploy ArgoCD after the EKS cluster is ready
    dir: infra/terraform
    deps: [init]
    cmds:
      - echo "Deploying ArgoCD to the EKS cluster..."
      - echo "deploy_argocd = true" > argocd.auto.tfvars
      - '{{.TOFU_CLI}} apply -auto-approve -var-file="environments/{{.ENV}}.tfvars" -var-file="argocd.auto.tfvars" {{.CLI_ARGS}}'

