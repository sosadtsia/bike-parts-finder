version: "3"

vars:
  ENV: 'develop'
  REGION: 'us-east-2'
  PROJECT_NAME: bike-parts-finder
  REGISTRY_PORT: 5000

includes:
  kind:
    taskfile: ./Taskfile.kind.yml
    dir: .
    optional: true
  eks:
    taskfile: ./Taskfile.eks.yaml
    dir: .
    optional: true
  docker:
    taskfile: ./Taskfile.docker.yml
    dir: .
    optional: true
  helmfile:
    taskfile: ./Taskfile.helmfile.yml
    dir: .
    optional: true
  argocd:
    taskfile: ./Taskfile.argocd.yml
    dir: .
    optional: true

tasks:
  check:deps:
    desc: Check for required dependencies
    cmds:
      - cmd: which tofu
        silent: true
      - cmd: which kubectl
        silent: true
      - cmd: which helm
        silent: true
      - cmd: which helmfile
        silent: true
      - cmd: which docker
        silent: true
      - cmd: which kind
    silent: true

  # Deployment tasks with consistent naming
  deploy:kind:
    desc: Deploy a local Kind cluster with all components
    deps: [check:deps]
    cmds:
      - task: kind:create
      - task: docker:build-all
      - task: kind:load-images
      - task: helmfile:develop
      - task: argocd:password
      - echo "✅ Kind deployment complete!"

  deploy:eks:
    desc: Deploy to Amazon EKS
    deps: [check:deps]
    cmds:
      - task: eks:deploy-bootstrap
      - echo "⏳ Waiting for EKS cluster to be ready..."
      - sleep 30
      - task: eks:deploy-argocd
      - echo "✅ EKS deployment complete!"

  # Setup aliases
  setup:local:
    desc: Set up complete local development environment (alias for deploy:kind)
    cmds:
      - task: deploy:kind

  # Bootstrap tasks
  bootstrap:remote:
    desc: Bootstrap with remote state (for CI/CD)
    deps: [check:deps]
    cmds:
      - task: eks:init
      - task: eks:apply
        vars: { ENV: "{{.ENV}}" }
      - echo "✅ Remote bootstrap complete!"

  bootstrap:local:
    desc: Bootstrap environment locally
    deps: [check:deps]
    cmds:
      - task: eks:init
      - task: eks:apply
      - echo "✅ Local bootstrap complete!"

  # Clean up local environment
  clean:local:
    desc: Clean up local development environment
    cmds:
      - task: kind:destroy
