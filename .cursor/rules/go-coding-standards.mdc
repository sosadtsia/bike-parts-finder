---
description: Go Coding Standards
globs: *.go
alwaysApply: true
---

# Go Coding Standards

## Package Structure
- Use standard Go package structure
- Place shared code in the `pkg` directory
- Place executable entry points in the `cmd` directory
- Follow standard Go project layout conventions

## Code Style
- Follow Go's official style guidelines
- Use `gofmt` or `goimports` for consistent formatting
- Use meaningful variable and function names
- Prefer composition over inheritance
- Use interfaces for abstraction
- Handle errors explicitly

## Dependencies
- This project uses Go modules (go.mod)
- Key dependencies:
  - github.com/gocolly/colly/v2 - For web scraping
  - github.com/gorilla/mux - For HTTP routing
  - github.com/jackc/pgx/v5 - For PostgreSQL access
  - github.com/redis/go-redis/v9 - For Redis cache
  - github.com/segmentio/kafka-go - For Kafka messaging

## Testing
- Write unit tests for all packages
- Use table-driven tests where appropriate
- Aim for high test coverage, especially for core functionality
- Use Go's built-in testing package

## Error Handling
- Return errors rather than using panic
- Use error wrapping (fmt.Errorf with %w) to add context
- Document error return conditions in function comments
