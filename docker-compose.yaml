---
services:
  api:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/bike_parts_finder?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./web/frontend/dist:/app/web/dist
    networks:
      - bikepartsnet

  scraper:
    build:
      context: .
      dockerfile: cmd/scraper/Dockerfile
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - bikepartsnet

  consumer:
    build:
      context: .
      dockerfile: cmd/consumer/Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/bike_parts_finder?sslmode=disable
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - kafka
    networks:
      - bikepartsnet

  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bike_parts_finder
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - bikepartsnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bikepartsnet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.2
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - bikepartsnet

  kafka:
    image: confluentinc/cp-kafka:8.0.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - bikepartsnet

  kafdrop:
    image: obsidiandynamics/kafdrop:3.31.0
    ports:
      - "9000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
      - JVM_OPTS=-Xms32M -Xmx64M
    depends_on:
      - kafka
    networks:
      - bikepartsnet

  frontend-builder:
    build:
      context: ./web/frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./web/frontend:/app
      - ./web/frontend/dist:/app/dist
    networks:
      - bikepartsnet

volumes:
  postgres-data:
  redis-data:

networks:
  bikepartsnet:
    driver: bridge
